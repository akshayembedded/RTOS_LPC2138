Component: ARM Compiler 5.06 update 7 (build 960) Tool: armlink [4d3601]

==============================================================================

Section Cross References

    lcd.o(i.display) refers to lcd.o(i.trans) for trans
    lcd.o(i.lcd1) refers to queue.o(i.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    lcd.o(i.lcd1) refers to queue.o(i.xQueueGenericReceive) for xQueueGenericReceive
    lcd.o(i.lcd1) refers to lcd.o(i.display) for display
    lcd.o(i.lcd1) refers to lcd.o(i.trans) for trans
    lcd.o(i.lcd1) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    lcd.o(i.lcd1) refers to lcd.o(.data) for .data
    lcd.o(i.lcd2) refers to queue.o(i.xQueueGenericReceive) for xQueueGenericReceive
    lcd.o(i.lcd2) refers to queue.o(i.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    lcd.o(i.lcd2) refers to lcd.o(i.display) for display
    lcd.o(i.lcd2) refers to lcd.o(i.trans) for trans
    lcd.o(i.lcd2) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    lcd.o(i.lcd2) refers to lcd.o(.data) for .data
    lcd.o(i.lcd3) refers to queue.o(i.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    lcd.o(i.lcd3) refers to queue.o(i.xQueueGenericReceive) for xQueueGenericReceive
    lcd.o(i.lcd3) refers to lcd.o(i.display) for display
    lcd.o(i.lcd3) refers to lcd.o(i.trans) for trans
    lcd.o(i.lcd3) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    lcd.o(i.lcd3) refers to lcd.o(.data) for .data
    lcd.o(i.main) refers to queue.o(i.xQueueCreateCountingSemaphore) for xQueueCreateCountingSemaphore
    lcd.o(i.main) refers to queue.o(i.xQueueCreateMutex) for xQueueCreateMutex
    lcd.o(i.main) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    lcd.o(i.main) refers to tasks.o(i.vTaskStartScheduler) for vTaskStartScheduler
    lcd.o(i.main) refers to lcd.o(.data) for .data
    lcd.o(i.main) refers to lcd.o(i.lcd1) for lcd1
    lcd.o(i.main) refers to lcd.o(i.lcd2) for lcd2
    lcd.o(i.main) refers to lcd.o(i.lcd3) for lcd3
    queue.o(i.prvCopyDataFromQueue) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    queue.o(i.prvCopyDataToQueue) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    queue.o(i.prvCopyDataToQueue) refers to tasks.o(i.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(i.prvInitialiseMutex) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.prvInitialiseNewQueue) refers to queue.o(i.xQueueGenericReset) for xQueueGenericReset
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.vTaskMissedYield) for vTaskMissedYield
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueDelete) refers to heap_4.o(i.vPortFree) for vPortFree
    queue.o(i.xQueueCreateCountingSemaphore) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(i.xQueueGenericCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    queue.o(i.xQueueGenericCreate) refers to queue.o(i.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(i.xQueueGenericReceive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReceive) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReceive) refers to portasm.o(PORT_ASM) for vPortYield
    queue.o(i.xQueueGenericReceive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.vTaskSetTimeOutState) for vTaskSetTimeOutState
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericReceive) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericReceive) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.vTaskPriorityInherit) for vTaskPriorityInherit
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReset) refers to list.o(i.vListInitialise) for vListInitialise
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericReset) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReset) refers to portasm.o(PORT_ASM) for vPortYield
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericSend) refers to portasm.o(PORT_ASM) for vPortYield
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSetTimeOutState) for vTaskSetTimeOutState
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvIsQueueFull) for prvIsQueueFull
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSendFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueuePeekFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    tasks.o(i.pcTaskGetName) refers to tasks.o(.data) for .data
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.data) for .data
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss) for .bss
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(i.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(i.prvAddNewTaskToReadyList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.data) for .data
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.bss) for .bss
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.bss) for .bss
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.data) for .data
    tasks.o(i.prvDeleteTCB) refers to heap_4.o(i.vPortFree) for vPortFree
    tasks.o(i.prvIdleTask) refers to tasks.o(i.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(i.prvIdleTask) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.prvIdleTask) refers to tasks.o(.bss) for .bss
    tasks.o(i.prvInitialiseNewTask) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    tasks.o(i.prvInitialiseNewTask) refers to port.o(i.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(i.prvInitialiseTaskLists) refers to list.o(i.vListInitialise) for vListInitialise
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.bss) for .bss
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.data) for .data
    tasks.o(i.prvResetNextTaskUnblockTime) refers to tasks.o(.data) for .data
    tasks.o(i.prvTaskIsTaskSuspended) refers to tasks.o(.bss) for .bss
    tasks.o(i.pvTaskIncrementMutexHeldCount) refers to tasks.o(.data) for .data
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.ulTaskNotifyTake) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(.data) for .data
    tasks.o(i.uxTaskGetNumberOfTasks) refers to tasks.o(.data) for .data
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.uxTaskPriorityGet) refers to tasks.o(.data) for .data
    tasks.o(i.uxTaskPriorityGetFromISR) refers to tasks.o(.data) for .data
    tasks.o(i.uxTaskResetEventItemValue) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskDelay) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelay) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelay) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelay) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelayUntil) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskDelete) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskDelete) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskDelete) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.vTaskDelete) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskDelete) refers to tasks.o(.bss) for .bss
    tasks.o(i.vTaskEndScheduler) refers to port.o(i.vPortEndScheduler) for vPortEndScheduler
    tasks.o(i.vTaskEndScheduler) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskMissedYield) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.bss) for .bss
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskPriorityInherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPriorityInherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPriorityInherit) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskPriorityInherit) refers to tasks.o(.bss) for .bss
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPrioritySet) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.bss) for .bss
    tasks.o(i.vTaskResume) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskResume) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.vTaskResume) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskResume) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskResume) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.vTaskResume) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskResume) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskResume) refers to tasks.o(.bss) for .bss
    tasks.o(i.vTaskSetTimeOutState) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    tasks.o(i.vTaskStartScheduler) refers to port.o(i.xPortStartScheduler) for xPortStartScheduler
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.prvIdleTask) for prvIdleTask
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSuspend) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskSuspend) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskSuspend) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(i.vTaskSuspend) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskSuspend) refers to tasks.o(.bss) for .bss
    tasks.o(i.vTaskSuspendAll) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.bss) for .bss
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(i.vTaskSetTimeOutState) for vTaskSetTimeOutState
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    tasks.o(i.xTaskCreate) refers to heap_4.o(i.vPortFree) for vPortFree
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotify) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.bss) for .bss
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.bss) for .bss
    tasks.o(i.xTaskGetCurrentTaskHandle) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskGetTickCount) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGetTickCount) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGetTickCount) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskGetTickCountFromISR) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.bss) for .bss
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyStateClear) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskNotifyWait) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.bss) for .bss
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.bss) for .bss
    tasks.o(i.xTaskRemoveFromUnorderedEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskRemoveFromUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskRemoveFromUnorderedEventList) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss) for .bss
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskResumeAll) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeAll) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(i.xTaskResumeAll) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.bss) for .bss
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.bss) for .bss
    heap_4.o(i.prvHeapInit) refers to heap_4.o(.bss) for .bss
    heap_4.o(i.prvHeapInit) refers to heap_4.o(.data) for .data
    heap_4.o(i.prvInsertBlockIntoFreeList) refers to heap_4.o(.data) for .data
    heap_4.o(i.pvPortMalloc) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(i.pvPortMalloc) refers to heap_4.o(i.prvHeapInit) for prvHeapInit
    heap_4.o(i.pvPortMalloc) refers to heap_4.o(i.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(i.pvPortMalloc) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(i.pvPortMalloc) refers to heap_4.o(.data) for .data
    heap_4.o(i.vPortFree) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(i.vPortFree) refers to heap_4.o(i.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(i.vPortFree) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(i.vPortFree) refers to heap_4.o(.data) for .data
    heap_4.o(i.xPortGetFreeHeapSize) refers to heap_4.o(.data) for .data
    heap_4.o(i.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.data) for .data
    port.o(i.prvSetupTimerInterrupt) refers to portasm.o(PORT_ASM) for vPreemptiveTick
    port.o(i.vPortEnterCritical) refers to port.o(.data) for .data
    port.o(i.vPortExitCritical) refers to port.o(.data) for .data
    port.o(i.xPortStartScheduler) refers to port.o(i.prvSetupTimerInterrupt) for prvSetupTimerInterrupt
    port.o(i.xPortStartScheduler) refers to portasm.o(PORT_ASM) for vPortStartFirstTask
    portasm.o(PORT_ASM) refers to tasks.o(.data) for pxCurrentTCB
    portasm.o(PORT_ASM) refers to port.o(.data) for ulCriticalNesting
    portasm.o(PORT_ASM) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    portasm.o(PORT_ASM) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    startup.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(RESET) refers to portasm.o(PORT_ASM) for vPortYieldProcessor
    startup.o(RESET) refers to startup.o(STACK) for Stack_Top
    startup.o(RESET) refers to __main.o(!!!main) for __main
    startup.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(.text) refers to startup.o(HEAP) for Heap_Mem
    startup.o(.text) refers to startup.o(STACK) for Stack_Mem
    rt_memcpy.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to lcd.o(i.main) for main
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_fini_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000009) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000011) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000012) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000006) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to __raise.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing queue.o(i.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(i.uxQueueSpacesAvailable), (40 bytes).
    Removing queue.o(i.vQueueDelete), (4 bytes).
    Removing queue.o(i.xQueueGenericSendFromISR), (136 bytes).
    Removing queue.o(i.xQueueGiveFromISR), (120 bytes).
    Removing queue.o(i.xQueueIsQueueEmptyFromISR), (28 bytes).
    Removing queue.o(i.xQueueIsQueueFullFromISR), (32 bytes).
    Removing queue.o(i.xQueuePeekFromISR), (56 bytes).
    Removing queue.o(i.xQueueReceiveFromISR), (128 bytes).
    Removing tasks.o(i.pcTaskGetName), (28 bytes).
    Removing tasks.o(i.prvTaskIsTaskSuspended), (60 bytes).
    Removing tasks.o(i.ulTaskNotifyTake), (160 bytes).
    Removing tasks.o(i.uxTaskGetNumberOfTasks), (16 bytes).
    Removing tasks.o(i.uxTaskPriorityGet), (52 bytes).
    Removing tasks.o(i.uxTaskPriorityGetFromISR), (28 bytes).
    Removing tasks.o(i.uxTaskResetEventItemValue), (40 bytes).
    Removing tasks.o(i.vTaskDelay), (64 bytes).
    Removing tasks.o(i.vTaskDelayUntil), (144 bytes).
    Removing tasks.o(i.vTaskDelete), (184 bytes).
    Removing tasks.o(i.vTaskEndScheduler), (32 bytes).
    Removing tasks.o(i.vTaskNotifyGiveFromISR), (188 bytes).
    Removing tasks.o(i.vTaskPlaceOnUnorderedEventList), (56 bytes).
    Removing tasks.o(i.vTaskPrioritySet), (256 bytes).
    Removing tasks.o(i.vTaskResume), (148 bytes).
    Removing tasks.o(i.vTaskSuspend), (180 bytes).
    Removing tasks.o(i.xTaskGenericNotify), (256 bytes).
    Removing tasks.o(i.xTaskGenericNotifyFromISR), (292 bytes).
    Removing tasks.o(i.xTaskGetCurrentTaskHandle), (16 bytes).
    Removing tasks.o(i.xTaskGetTickCount), (36 bytes).
    Removing tasks.o(i.xTaskGetTickCountFromISR), (16 bytes).
    Removing tasks.o(i.xTaskNotifyStateClear), (84 bytes).
    Removing tasks.o(i.xTaskNotifyWait), (204 bytes).
    Removing tasks.o(i.xTaskRemoveFromUnorderedEventList), (128 bytes).
    Removing tasks.o(i.xTaskResumeFromISR), (156 bytes).
    Removing heap_4.o(i.vPortInitialiseBlocks), (4 bytes).
    Removing heap_4.o(i.xPortGetFreeHeapSize), (16 bytes).
    Removing heap_4.o(i.xPortGetMinimumEverFreeHeapSize), (16 bytes).
    Removing port.o(i.vPortEndScheduler), (4 bytes).

38 unused section(s) (total 3416 bytes) removed from the image.

==============================================================================

Adding Veneers to the image

    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_init' from __rtentry2.o(.ARM.Collect$$rtentry$$0000000A).
    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_shutdown' from rtexit2.o(.ARM.Collect$$rtexit$$00000003).
    Adding TA veneer (4 bytes, Inline) for call to '__rt_exit' from exit.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '_sys_exit' from rtexit2.o(.ARM.Collect$$rtexit$$00000004).

4 Veneer(s) (total 28 bytes) added to the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      260  startup.o(RESET)
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    C:\Users\aksha\Downloads\FreeRTOS\Demo\ARM7_LPC2129_Keil_RVDS 1 (original 12Mhz)\Startup.s 0x00000000   Number         0  startup.o ABSOLUTE
    C:\Users\aksha\Downloads\FreeRTOS\Source\list.c 0x00000000   Number         0  list.o ABSOLUTE
    C:\Users\aksha\Downloads\FreeRTOS\Source\portable\MemMang\heap_4.c 0x00000000   Number         0  heap_4.o ABSOLUTE
    C:\Users\aksha\Downloads\FreeRTOS\Source\portable\RVDS\ARM7_LPC21xx\port.c 0x00000000   Number         0  port.o ABSOLUTE
    C:\Users\aksha\Downloads\FreeRTOS\Source\portable\RVDS\ARM7_LPC21xx\portASM.s 0x00000000   Number         0  portasm.o ABSOLUTE
    C:\Users\aksha\Downloads\FreeRTOS\Source\queue.c 0x00000000   Number         0  queue.o ABSOLUTE
    C:\Users\aksha\Downloads\FreeRTOS\Source\tasks.c 0x00000000   Number         0  tasks.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    lcd.c                                    0x00000000   Number         0  lcd.o ABSOLUTE
    Undef_Handler                            0x00000040   ARM Code       4  startup.o(RESET)
    PAbt_Handler                             0x00000048   ARM Code       4  startup.o(RESET)
    DAbt_Handler                             0x0000004c   ARM Code       4  startup.o(RESET)
    IRQ_Handler                              0x00000050   ARM Code       4  startup.o(RESET)
    FIQ_Handler                              0x00000054   ARM Code       4  startup.o(RESET)
    !!!main                                  0x00000104   Section        8  __main.o(!!!main)
    !!!scatter                               0x0000010c   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x00000148   Section       40  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x00000170   Section       44  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x000001a4   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x000001a6   Section       12  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x000001bc   Section        4  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000006      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    .ARM.Collect$$libshutdown$$00000009      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    .ARM.Collect$$libshutdown$$0000000C      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000E      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    .ARM.Collect$$libshutdown$$00000011      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000011)
    .ARM.Collect$$libshutdown$$00000012      0x000001c0   Section        6  libshutdown2.o(.ARM.Collect$$libshutdown$$00000012)
    .ARM.Collect$$rtentry$$00000000          0x000001c8   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x000001c8   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x000001c8   Section        8  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x000001d0   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x000001d0   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x000001d4   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x000001d4   Section       40  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x00000200   Section        4  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000204   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000204   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000208   Section        8  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x00000210   Section       32  startup.o(.text)
    .text                                    0x00000230   Section      212  rt_memcpy.o(.text)
    .text                                    0x00000304   Section        0  heapauxi.o(.text)
    .text                                    0x0000030c   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x00000370   Section       96  sys_stackheap_outer.o(.text)
    .text                                    0x000003d0   Section        0  exit.o(.text)
    .text                                    0x000003e4   Section       12  libspace.o(.text)
    .text                                    0x000003f8   Section        0  sys_exit.o(.text)
    .text                                    0x00000404   Section        4  use_no_semi.o(.text)
    .text                                    0x00000408   Section        0  indicate_semi.o(.text)
    PORT_ASM                                 0x00000408   Section      396  portasm.o(PORT_ASM)
    i.display                                0x00000594   Section        0  lcd.o(i.display)
    i.lcd1                                   0x000005bc   Section        0  lcd.o(i.lcd1)
    i.lcd2                                   0x000006b4   Section        0  lcd.o(i.lcd2)
    i.lcd3                                   0x000007a4   Section        0  lcd.o(i.lcd3)
    i.main                                   0x0000089c   Section        0  lcd.o(i.main)
    i.prvAddCurrentTaskToDelayedList         0x00000990   Section        0  tasks.o(i.prvAddCurrentTaskToDelayedList)
    prvAddCurrentTaskToDelayedList           0x00000990   ARM Code     148  tasks.o(i.prvAddCurrentTaskToDelayedList)
    i.prvAddNewTaskToReadyList               0x00000a2c   Section        0  tasks.o(i.prvAddNewTaskToReadyList)
    prvAddNewTaskToReadyList                 0x00000a2c   ARM Code     208  tasks.o(i.prvAddNewTaskToReadyList)
    i.prvCheckTasksWaitingTermination        0x00000b04   Section        0  tasks.o(i.prvCheckTasksWaitingTermination)
    prvCheckTasksWaitingTermination          0x00000b04   ARM Code     136  tasks.o(i.prvCheckTasksWaitingTermination)
    i.prvCopyDataFromQueue                   0x00000b94   Section        0  queue.o(i.prvCopyDataFromQueue)
    prvCopyDataFromQueue                     0x00000b94   ARM Code      64  queue.o(i.prvCopyDataFromQueue)
    i.prvCopyDataToQueue                     0x00000bd4   Section        0  queue.o(i.prvCopyDataToQueue)
    prvCopyDataToQueue                       0x00000bd4   ARM Code     216  queue.o(i.prvCopyDataToQueue)
    i.prvDeleteTCB                           0x00000cac   Section        0  tasks.o(i.prvDeleteTCB)
    prvDeleteTCB                             0x00000cac   ARM Code      28  tasks.o(i.prvDeleteTCB)
    i.prvHeapInit                            0x00000cc8   Section        0  heap_4.o(i.prvHeapInit)
    prvHeapInit                              0x00000cc8   ARM Code     116  heap_4.o(i.prvHeapInit)
    i.prvIdleTask                            0x00000d44   Section        0  tasks.o(i.prvIdleTask)
    prvIdleTask                              0x00000d44   ARM Code      28  tasks.o(i.prvIdleTask)
    i.prvInitialiseMutex                     0x00000d64   Section        0  queue.o(i.prvInitialiseMutex)
    prvInitialiseMutex                       0x00000d64   ARM Code      44  queue.o(i.prvInitialiseMutex)
    i.prvInitialiseNewQueue                  0x00000d90   Section        0  queue.o(i.prvInitialiseNewQueue)
    prvInitialiseNewQueue                    0x00000d90   ARM Code      44  queue.o(i.prvInitialiseNewQueue)
    i.prvInitialiseNewTask                   0x00000dbc   Section        0  tasks.o(i.prvInitialiseNewTask)
    prvInitialiseNewTask                     0x00000dbc   ARM Code     192  tasks.o(i.prvInitialiseNewTask)
    i.prvInitialiseTaskLists                 0x00000e7c   Section        0  tasks.o(i.prvInitialiseTaskLists)
    prvInitialiseTaskLists                   0x00000e7c   ARM Code     104  tasks.o(i.prvInitialiseTaskLists)
    i.prvInsertBlockIntoFreeList             0x00000f00   Section        0  heap_4.o(i.prvInsertBlockIntoFreeList)
    prvInsertBlockIntoFreeList               0x00000f00   ARM Code     156  heap_4.o(i.prvInsertBlockIntoFreeList)
    i.prvIsQueueEmpty                        0x00000fa4   Section        0  queue.o(i.prvIsQueueEmpty)
    prvIsQueueEmpty                          0x00000fa4   ARM Code      52  queue.o(i.prvIsQueueEmpty)
    i.prvIsQueueFull                         0x00000fd8   Section        0  queue.o(i.prvIsQueueFull)
    prvIsQueueFull                           0x00000fd8   ARM Code      56  queue.o(i.prvIsQueueFull)
    i.prvResetNextTaskUnblockTime            0x00001010   Section        0  tasks.o(i.prvResetNextTaskUnblockTime)
    prvResetNextTaskUnblockTime              0x00001010   ARM Code      56  tasks.o(i.prvResetNextTaskUnblockTime)
    i.prvSetupTimerInterrupt                 0x0000104c   Section        0  port.o(i.prvSetupTimerInterrupt)
    prvSetupTimerInterrupt                   0x0000104c   ARM Code      80  port.o(i.prvSetupTimerInterrupt)
    i.prvUnlockQueue                         0x000010a8   Section        0  queue.o(i.prvUnlockQueue)
    prvUnlockQueue                           0x000010a8   ARM Code     160  queue.o(i.prvUnlockQueue)
    i.pvPortMalloc                           0x00001148   Section        0  heap_4.o(i.pvPortMalloc)
    i.pvTaskIncrementMutexHeldCount          0x00001264   Section        0  tasks.o(i.pvTaskIncrementMutexHeldCount)
    i.pxPortInitialiseStack                  0x00001290   Section        0  port.o(i.pxPortInitialiseStack)
    i.trans                                  0x00001348   Section        0  lcd.o(i.trans)
    i.uxListRemove                           0x00001364   Section        0  list.o(i.uxListRemove)
    i.uxQueueMessagesWaiting                 0x000013a8   Section        0  queue.o(i.uxQueueMessagesWaiting)
    i.vListInitialise                        0x000013c8   Section        0  list.o(i.vListInitialise)
    i.vListInitialiseItem                    0x000013ec   Section        0  list.o(i.vListInitialiseItem)
    i.vListInsert                            0x000013f8   Section        0  list.o(i.vListInsert)
    i.vListInsertEnd                         0x00001458   Section        0  list.o(i.vListInsertEnd)
    i.vPortEnterCritical                     0x00001488   Section        0  port.o(i.vPortEnterCritical)
    i.vPortExitCritical                      0x000014ac   Section        0  port.o(i.vPortExitCritical)
    i.vPortFree                              0x000014e8   Section        0  heap_4.o(i.vPortFree)
    i.vTaskMissedYield                       0x00001550   Section        0  tasks.o(i.vTaskMissedYield)
    i.vTaskPlaceOnEventList                  0x00001564   Section        0  tasks.o(i.vTaskPlaceOnEventList)
    i.vTaskPriorityInherit                   0x00001590   Section        0  tasks.o(i.vTaskPriorityInherit)
    i.vTaskSetTimeOutState                   0x00001644   Section        0  tasks.o(i.vTaskSetTimeOutState)
    i.vTaskStartScheduler                    0x00001660   Section        0  tasks.o(i.vTaskStartScheduler)
    i.vTaskSuspendAll                        0x000016d4   Section        0  tasks.o(i.vTaskSuspendAll)
    i.vTaskSwitchContext                     0x000016ec   Section        0  tasks.o(i.vTaskSwitchContext)
    i.xPortStartScheduler                    0x00001774   Section        0  port.o(i.xPortStartScheduler)
    i.xQueueCreateCountingSemaphore          0x0000178c   Section        0  queue.o(i.xQueueCreateCountingSemaphore)
    i.xQueueCreateMutex                      0x000017b4   Section        0  queue.o(i.xQueueCreateMutex)
    i.xQueueGenericCreate                    0x000017e0   Section        0  queue.o(i.xQueueGenericCreate)
    i.xQueueGenericReceive                   0x0000183c   Section        0  queue.o(i.xQueueGenericReceive)
    i.xQueueGenericReset                     0x000019f4   Section        0  queue.o(i.xQueueGenericReset)
    i.xQueueGenericSend                      0x00001a98   Section        0  queue.o(i.xQueueGenericSend)
    i.xTaskCheckForTimeOut                   0x00001bf4   Section        0  tasks.o(i.xTaskCheckForTimeOut)
    i.xTaskCreate                            0x00001c84   Section        0  tasks.o(i.xTaskCreate)
    i.xTaskIncrementTick                     0x00001d2c   Section        0  tasks.o(i.xTaskIncrementTick)
    i.xTaskPriorityDisinherit                0x00001e6c   Section        0  tasks.o(i.xTaskPriorityDisinherit)
    i.xTaskRemoveFromEventList               0x00001efc   Section        0  tasks.o(i.xTaskRemoveFromEventList)
    i.xTaskResumeAll                         0x00001f9c   Section        0  tasks.o(i.xTaskResumeAll)
    .data                                    0x40000000   Section        8  lcd.o(.data)
    .data                                    0x40000008   Section       60  tasks.o(.data)
    uxDeletedTasksWaitingCleanUp             0x4000000c   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x40000010   Data           4  tasks.o(.data)
    xTickCount                               0x40000014   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x40000018   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x4000001c   Data           4  tasks.o(.data)
    uxPendedTicks                            0x40000020   Data           4  tasks.o(.data)
    xYieldPending                            0x40000024   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x40000028   Data           4  tasks.o(.data)
    uxTaskNumber                             0x4000002c   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x40000030   Data           4  tasks.o(.data)
    xIdleTaskHandle                          0x40000034   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x40000038   Data           4  tasks.o(.data)
    pxDelayedTaskList                        0x4000003c   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x40000040   Data           4  tasks.o(.data)
    .data                                    0x40000044   Section       24  heap_4.o(.data)
    pxEnd                                    0x40000044   Data           4  heap_4.o(.data)
    xFreeBytesRemaining                      0x40000048   Data           4  heap_4.o(.data)
    xMinimumEverFreeBytesRemaining           0x4000004c   Data           4  heap_4.o(.data)
    xBlockAllocatedBit                       0x40000050   Data           4  heap_4.o(.data)
    xStart                                   0x40000054   Data           8  heap_4.o(.data)
    .data                                    0x4000005c   Section        4  port.o(.data)
    .bss                                     0x40000060   Section      180  tasks.o(.bss)
    pxReadyTasksLists                        0x40000060   Data          80  tasks.o(.bss)
    xDelayedTaskList1                        0x400000b0   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x400000c4   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x400000d8   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x400000ec   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x40000100   Data          20  tasks.o(.bss)
    .bss                                     0x40000114   Section    13312  heap_4.o(.bss)
    ucHeap                                   0x40000114   Data       13312  heap_4.o(.bss)
    .bss                                     0x40003514   Section       96  libspace.o(.bss)
    HEAP                                     0x40003578   Section        0  startup.o(HEAP)
    STACK                                    0x40003578   Section     1568  startup.o(STACK)
    Heap_Mem                                 0x40003578   Data           0  startup.o(HEAP)
    Stack_Mem                                0x40003578   Data        1568  startup.o(STACK)
    Stack_Top                                0x40003b98   Data           0  startup.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv1$ARM_ISAv4$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  lcd.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_fini_                               - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    Reset_Handler                            0x00000058   ARM Code       0  startup.o(RESET)
    __main                                   0x00000104   ARM Code       8  __main.o(!!!main)
    __scatterload                            0x0000010c   ARM Code       0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x0000010c   ARM Code      52  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000120   ARM Code       0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x00000148   ARM Code      40  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x00000170   ARM Code      44  __scatter_zi.o(!!handler_zi)
    Inline ARM to Thumb Veneer to __rt_lib_init 0x0000019c   ARM Code       8  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init                            0x000001a5   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    Inline ARM to Thumb Veneer to __rt_lib_shutdown 0x000001b4   ARM Code       8  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown                        0x000001bd   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_fini_1                 0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    __rt_lib_shutdown_heap_1                 0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000011)
    __rt_lib_shutdown_return                 0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000012)
    __rt_lib_shutdown_signal_1               0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_lib_shutdown_stdio_1                0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    __rt_lib_shutdown_user_alloc_1           0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    __rt_entry                               0x000001c8   ARM Code       0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x000001c8   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x000001c8   ARM Code       0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x000001d0   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x000001d0   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x000001d4   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x000001d4   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    Inline Thumb to ARM Veneer to __rt_exit  0x000001fd   Thumb Code     4  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit                                0x00000200   ARM Code       0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000204   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000204   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000208   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __user_initial_stackheap                 0x00000210   ARM Code       0  startup.o(.text)
    __aeabi_memcpy                           0x00000230   ARM Code       0  rt_memcpy.o(.text)
    __rt_memcpy                              0x00000230   ARM Code     212  rt_memcpy.o(.text)
    _memcpy_lastbytes                        0x000002e4   ARM Code       0  rt_memcpy.o(.text)
    __use_two_region_memory                  0x00000305   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x00000307   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x00000309   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x0000030c   ARM Code       0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x0000030c   ARM Code       0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x0000030c   ARM Code     100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x00000358   ARM Code       0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x00000370   ARM Code      96  sys_stackheap_outer.o(.text)
    exit                                     0x000003d1   Thumb Code    20  exit.o(.text)
    __user_libspace                          0x000003e4   ARM Code      12  libspace.o(.text)
    __user_perproc_libspace                  0x000003e4   ARM Code       0  libspace.o(.text)
    __user_perthread_libspace                0x000003e4   ARM Code       0  libspace.o(.text)
    Inline ARM to Thumb Veneer to _sys_exit  0x000003f0   ARM Code       8  sys_exit.o(.text)
    _sys_exit                                0x000003f9   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000404   ARM Code       0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000404   ARM Code       4  use_no_semi.o(.text)
    __semihosting_library_function           0x00000408   ARM Code       0  indicate_semi.o(.text)
    vPortStartFirstTask                      0x00000408   ARM Code       0  portasm.o(PORT_ASM)
    vPortYield                               0x00000438   ARM Code       0  portasm.o(PORT_ASM)
    vPortYieldProcessor                      0x00000440   ARM Code       0  portasm.o(PORT_ASM)
    vPreemptiveTick                          0x000004cc   ARM Code       0  portasm.o(PORT_ASM)
    display                                  0x00000594   ARM Code      40  lcd.o(i.display)
    lcd1                                     0x000005bc   ARM Code     188  lcd.o(i.lcd1)
    lcd2                                     0x000006b4   ARM Code     180  lcd.o(i.lcd2)
    lcd3                                     0x000007a4   ARM Code     188  lcd.o(i.lcd3)
    main                                     0x0000089c   ARM Code     204  lcd.o(i.main)
    pvPortMalloc                             0x00001148   ARM Code     276  heap_4.o(i.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x00001264   ARM Code      40  tasks.o(i.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x00001290   ARM Code     164  port.o(i.pxPortInitialiseStack)
    trans                                    0x00001348   ARM Code      24  lcd.o(i.trans)
    uxListRemove                             0x00001364   ARM Code      68  list.o(i.uxListRemove)
    uxQueueMessagesWaiting                   0x000013a8   ARM Code      32  queue.o(i.uxQueueMessagesWaiting)
    vListInitialise                          0x000013c8   ARM Code      36  list.o(i.vListInitialise)
    vListInitialiseItem                      0x000013ec   ARM Code      12  list.o(i.vListInitialiseItem)
    vListInsert                              0x000013f8   ARM Code      96  list.o(i.vListInsert)
    vListInsertEnd                           0x00001458   ARM Code      48  list.o(i.vListInsertEnd)
    vPortEnterCritical                       0x00001488   ARM Code      32  port.o(i.vPortEnterCritical)
    vPortExitCritical                        0x000014ac   ARM Code      56  port.o(i.vPortExitCritical)
    vPortFree                                0x000014e8   ARM Code     100  heap_4.o(i.vPortFree)
    vTaskMissedYield                         0x00001550   ARM Code      16  tasks.o(i.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00001564   ARM Code      40  tasks.o(i.vTaskPlaceOnEventList)
    vTaskPriorityInherit                     0x00001590   ARM Code     172  tasks.o(i.vTaskPriorityInherit)
    vTaskSetTimeOutState                     0x00001644   ARM Code      24  tasks.o(i.vTaskSetTimeOutState)
    vTaskStartScheduler                      0x00001660   ARM Code      96  tasks.o(i.vTaskStartScheduler)
    vTaskSuspendAll                          0x000016d4   ARM Code      20  tasks.o(i.vTaskSuspendAll)
    vTaskSwitchContext                       0x000016ec   ARM Code     128  tasks.o(i.vTaskSwitchContext)
    xPortStartScheduler                      0x00001774   ARM Code      24  port.o(i.xPortStartScheduler)
    xQueueCreateCountingSemaphore            0x0000178c   ARM Code      40  queue.o(i.xQueueCreateCountingSemaphore)
    xQueueCreateMutex                        0x000017b4   ARM Code      44  queue.o(i.xQueueCreateMutex)
    xQueueGenericCreate                      0x000017e0   ARM Code      92  queue.o(i.xQueueGenericCreate)
    xQueueGenericReceive                     0x0000183c   ARM Code     440  queue.o(i.xQueueGenericReceive)
    xQueueGenericReset                       0x000019f4   ARM Code     164  queue.o(i.xQueueGenericReset)
    xQueueGenericSend                        0x00001a98   ARM Code     348  queue.o(i.xQueueGenericSend)
    xTaskCheckForTimeOut                     0x00001bf4   ARM Code     140  tasks.o(i.xTaskCheckForTimeOut)
    xTaskCreate                              0x00001c84   ARM Code     168  tasks.o(i.xTaskCreate)
    xTaskIncrementTick                       0x00001d2c   ARM Code     312  tasks.o(i.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00001e6c   ARM Code     136  tasks.o(i.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x00001efc   ARM Code     148  tasks.o(i.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00001f9c   ARM Code     264  tasks.o(i.xTaskResumeAll)
    Region$$Table$$Base                      0x000020b0   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x000020d0   Number         0  anon$$obj.o(Region$$Table)
    m                                        0x40000000   Data           4  lcd.o(.data)
    m2                                       0x40000004   Data           4  lcd.o(.data)
    pxCurrentTCB                             0x40000008   Data           4  tasks.o(.data)
    ulCriticalNesting                        0x4000005c   Data           4  port.o(.data)
    __libspace_start                         0x40003514   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x40003574   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000104

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00002130, Max: 0x00080000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x000020d0, Max: 0x00080000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000104   Code   RO          663    RESET               startup.o
    0x00000104   0x00000104   0x00000008   Code   RO          675  * !!!main             c_t.l(__main.o)
    0x0000010c   0x0000010c   0x0000003c   Code   RO          838    !!!scatter          c_t.l(__scatter.o)
    0x00000148   0x00000148   0x00000028   Code   RO          840    !!handler_copy      c_t.l(__scatter_copy.o)
    0x00000170   0x00000170   0x0000002c   Code   RO          842    !!handler_zi        c_t.l(__scatter_zi.o)
    0x0000019c   0x0000019c   0x00000008   Ven    RO          704    .ARM.Collect$$libinit$$00000000  c_t.l(libinit.o)
    0x000001a4   0x000001a4   0x00000002   Code   RO          704    .ARM.Collect$$libinit$$00000000  c_t.l(libinit.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          711    .ARM.Collect$$libinit$$00000002  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          713    .ARM.Collect$$libinit$$00000004  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          716    .ARM.Collect$$libinit$$0000000A  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          718    .ARM.Collect$$libinit$$0000000C  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          720    .ARM.Collect$$libinit$$0000000E  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          723    .ARM.Collect$$libinit$$00000011  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          725    .ARM.Collect$$libinit$$00000013  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          727    .ARM.Collect$$libinit$$00000015  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          729    .ARM.Collect$$libinit$$00000017  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          731    .ARM.Collect$$libinit$$00000019  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          733    .ARM.Collect$$libinit$$0000001B  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          735    .ARM.Collect$$libinit$$0000001D  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          737    .ARM.Collect$$libinit$$0000001F  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          739    .ARM.Collect$$libinit$$00000021  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          741    .ARM.Collect$$libinit$$00000023  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          743    .ARM.Collect$$libinit$$00000025  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          747    .ARM.Collect$$libinit$$0000002C  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          749    .ARM.Collect$$libinit$$0000002E  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          751    .ARM.Collect$$libinit$$00000030  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          753    .ARM.Collect$$libinit$$00000032  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x0000000c   Code   RO          754    .ARM.Collect$$libinit$$00000033  c_t.l(libinit2.o)
    0x000001b2   0x000001b2   0x00000002   PAD
    0x000001b4   0x000001b4   0x00000008   Ven    RO          774    .ARM.Collect$$libshutdown$$00000000  c_t.l(libshutdown.o)
    0x000001bc   0x000001bc   0x00000004   Code   RO          774    .ARM.Collect$$libshutdown$$00000000  c_t.l(libshutdown.o)
    0x000001c0   0x000001c0   0x00000000   Code   RO          787    .ARM.Collect$$libshutdown$$00000002  c_t.l(libshutdown2.o)
    0x000001c0   0x000001c0   0x00000000   Code   RO          789    .ARM.Collect$$libshutdown$$00000004  c_t.l(libshutdown2.o)
    0x000001c0   0x000001c0   0x00000000   Code   RO          791    .ARM.Collect$$libshutdown$$00000006  c_t.l(libshutdown2.o)
    0x000001c0   0x000001c0   0x00000000   Code   RO          794    .ARM.Collect$$libshutdown$$00000009  c_t.l(libshutdown2.o)
    0x000001c0   0x000001c0   0x00000000   Code   RO          797    .ARM.Collect$$libshutdown$$0000000C  c_t.l(libshutdown2.o)
    0x000001c0   0x000001c0   0x00000000   Code   RO          799    .ARM.Collect$$libshutdown$$0000000E  c_t.l(libshutdown2.o)
    0x000001c0   0x000001c0   0x00000000   Code   RO          802    .ARM.Collect$$libshutdown$$00000011  c_t.l(libshutdown2.o)
    0x000001c0   0x000001c0   0x00000006   Code   RO          803    .ARM.Collect$$libshutdown$$00000012  c_t.l(libshutdown2.o)
    0x000001c6   0x000001c6   0x00000002   PAD
    0x000001c8   0x000001c8   0x00000000   Code   RO          677    .ARM.Collect$$rtentry$$00000000  c_t.l(__rtentry.o)
    0x000001c8   0x000001c8   0x00000000   Code   RO          681    .ARM.Collect$$rtentry$$00000002  c_t.l(__rtentry2.o)
    0x000001c8   0x000001c8   0x00000008   Code   RO          693    .ARM.Collect$$rtentry$$00000004  c_t.l(__rtentry4.o)
    0x000001d0   0x000001d0   0x00000000   Code   RO          683    .ARM.Collect$$rtentry$$00000009  c_t.l(__rtentry2.o)
    0x000001d0   0x000001d0   0x00000004   Code   RO          684    .ARM.Collect$$rtentry$$0000000A  c_t.l(__rtentry2.o)
    0x000001d4   0x000001d4   0x00000000   Code   RO          686    .ARM.Collect$$rtentry$$0000000C  c_t.l(__rtentry2.o)
    0x000001d4   0x000001d4   0x00000028   Code   RO          687    .ARM.Collect$$rtentry$$0000000D  c_t.l(__rtentry2.o)
    0x000001fc   0x000001fc   0x00000004   Ven    RO          708    .ARM.Collect$$rtexit$$00000000  c_t.l(rtexit.o)
    0x00000200   0x00000200   0x00000004   Code   RO          708    .ARM.Collect$$rtexit$$00000000  c_t.l(rtexit.o)
    0x00000204   0x00000204   0x00000000   Code   RO          756    .ARM.Collect$$rtexit$$00000002  c_t.l(rtexit2.o)
    0x00000204   0x00000204   0x00000004   Code   RO          757    .ARM.Collect$$rtexit$$00000003  c_t.l(rtexit2.o)
    0x00000208   0x00000208   0x00000008   Code   RO          758    .ARM.Collect$$rtexit$$00000004  c_t.l(rtexit2.o)
    0x00000210   0x00000210   0x00000020   Code   RO          664    .text               startup.o
    0x00000230   0x00000230   0x000000d4   Code   RO          671    .text               c_t.l(rt_memcpy.o)
    0x00000304   0x00000304   0x00000006   Code   RO          673    .text               c_t.l(heapauxi.o)
    0x0000030a   0x0000030a   0x00000002   PAD
    0x0000030c   0x0000030c   0x00000064   Code   RO          678    .text               c_t.l(rt_memcpy_w.o)
    0x00000370   0x00000370   0x00000060   Code   RO          695    .text               c_t.l(sys_stackheap_outer.o)
    0x000003d0   0x000003d0   0x00000014   Code   RO          697    .text               c_t.l(exit.o)
    0x000003e4   0x000003e4   0x0000000c   Code   RO          705    .text               c_t.l(libspace.o)
    0x000003f0   0x000003f0   0x00000008   Ven    RO          766    .text               c_t.l(sys_exit.o)
    0x000003f8   0x000003f8   0x0000000c   Code   RO          766    .text               c_t.l(sys_exit.o)
    0x00000404   0x00000404   0x00000004   Code   RO          777    .text               c_t.l(use_no_semi.o)
    0x00000408   0x00000408   0x00000000   Code   RO          779    .text               c_t.l(indicate_semi.o)
    0x00000408   0x00000408   0x0000018c   Code   RO          657    PORT_ASM            portasm.o
    0x00000594   0x00000594   0x00000028   Code   RO            1    i.display           lcd.o
    0x000005bc   0x000005bc   0x000000f8   Code   RO            2    i.lcd1              lcd.o
    0x000006b4   0x000006b4   0x000000f0   Code   RO            3    i.lcd2              lcd.o
    0x000007a4   0x000007a4   0x000000f8   Code   RO            4    i.lcd3              lcd.o
    0x0000089c   0x0000089c   0x000000f4   Code   RO            5    i.main              lcd.o
    0x00000990   0x00000990   0x0000009c   Code   RO          276    i.prvAddCurrentTaskToDelayedList  tasks.o
    0x00000a2c   0x00000a2c   0x000000d8   Code   RO          277    i.prvAddNewTaskToReadyList  tasks.o
    0x00000b04   0x00000b04   0x00000090   Code   RO          278    i.prvCheckTasksWaitingTermination  tasks.o
    0x00000b94   0x00000b94   0x00000040   Code   RO          135    i.prvCopyDataFromQueue  queue.o
    0x00000bd4   0x00000bd4   0x000000d8   Code   RO          136    i.prvCopyDataToQueue  queue.o
    0x00000cac   0x00000cac   0x0000001c   Code   RO          279    i.prvDeleteTCB      tasks.o
    0x00000cc8   0x00000cc8   0x0000007c   Code   RO          564    i.prvHeapInit       heap_4.o
    0x00000d44   0x00000d44   0x00000020   Code   RO          280    i.prvIdleTask       tasks.o
    0x00000d64   0x00000d64   0x0000002c   Code   RO          137    i.prvInitialiseMutex  queue.o
    0x00000d90   0x00000d90   0x0000002c   Code   RO          138    i.prvInitialiseNewQueue  queue.o
    0x00000dbc   0x00000dbc   0x000000c0   Code   RO          281    i.prvInitialiseNewTask  tasks.o
    0x00000e7c   0x00000e7c   0x00000084   Code   RO          282    i.prvInitialiseTaskLists  tasks.o
    0x00000f00   0x00000f00   0x000000a4   Code   RO          565    i.prvInsertBlockIntoFreeList  heap_4.o
    0x00000fa4   0x00000fa4   0x00000034   Code   RO          139    i.prvIsQueueEmpty   queue.o
    0x00000fd8   0x00000fd8   0x00000038   Code   RO          140    i.prvIsQueueFull    queue.o
    0x00001010   0x00001010   0x0000003c   Code   RO          283    i.prvResetNextTaskUnblockTime  tasks.o
    0x0000104c   0x0000104c   0x0000005c   Code   RO          613    i.prvSetupTimerInterrupt  port.o
    0x000010a8   0x000010a8   0x000000a0   Code   RO          141    i.prvUnlockQueue    queue.o
    0x00001148   0x00001148   0x0000011c   Code   RO          566    i.pvPortMalloc      heap_4.o
    0x00001264   0x00001264   0x0000002c   Code   RO          285    i.pvTaskIncrementMutexHeldCount  tasks.o
    0x00001290   0x00001290   0x000000b8   Code   RO          614    i.pxPortInitialiseStack  port.o
    0x00001348   0x00001348   0x0000001c   Code   RO            6    i.trans             lcd.o
    0x00001364   0x00001364   0x00000044   Code   RO           90    i.uxListRemove      list.o
    0x000013a8   0x000013a8   0x00000020   Code   RO          142    i.uxQueueMessagesWaiting  queue.o
    0x000013c8   0x000013c8   0x00000024   Code   RO           91    i.vListInitialise   list.o
    0x000013ec   0x000013ec   0x0000000c   Code   RO           92    i.vListInitialiseItem  list.o
    0x000013f8   0x000013f8   0x00000060   Code   RO           93    i.vListInsert       list.o
    0x00001458   0x00001458   0x00000030   Code   RO           94    i.vListInsertEnd    list.o
    0x00001488   0x00001488   0x00000024   Code   RO          616    i.vPortEnterCritical  port.o
    0x000014ac   0x000014ac   0x0000003c   Code   RO          617    i.vPortExitCritical  port.o
    0x000014e8   0x000014e8   0x00000068   Code   RO          567    i.vPortFree         heap_4.o
    0x00001550   0x00001550   0x00000014   Code   RO          295    i.vTaskMissedYield  tasks.o
    0x00001564   0x00001564   0x0000002c   Code   RO          297    i.vTaskPlaceOnEventList  tasks.o
    0x00001590   0x00001590   0x000000b4   Code   RO          299    i.vTaskPriorityInherit  tasks.o
    0x00001644   0x00001644   0x0000001c   Code   RO          302    i.vTaskSetTimeOutState  tasks.o
    0x00001660   0x00001660   0x00000074   Code   RO          303    i.vTaskStartScheduler  tasks.o
    0x000016d4   0x000016d4   0x00000018   Code   RO          305    i.vTaskSuspendAll   tasks.o
    0x000016ec   0x000016ec   0x00000088   Code   RO          306    i.vTaskSwitchContext  tasks.o
    0x00001774   0x00001774   0x00000018   Code   RO          618    i.xPortStartScheduler  port.o
    0x0000178c   0x0000178c   0x00000028   Code   RO          146    i.xQueueCreateCountingSemaphore  queue.o
    0x000017b4   0x000017b4   0x0000002c   Code   RO          147    i.xQueueCreateMutex  queue.o
    0x000017e0   0x000017e0   0x0000005c   Code   RO          148    i.xQueueGenericCreate  queue.o
    0x0000183c   0x0000183c   0x000001b8   Code   RO          149    i.xQueueGenericReceive  queue.o
    0x000019f4   0x000019f4   0x000000a4   Code   RO          150    i.xQueueGenericReset  queue.o
    0x00001a98   0x00001a98   0x0000015c   Code   RO          151    i.xQueueGenericSend  queue.o
    0x00001bf4   0x00001bf4   0x00000090   Code   RO          307    i.xTaskCheckForTimeOut  tasks.o
    0x00001c84   0x00001c84   0x000000a8   Code   RO          308    i.xTaskCreate       tasks.o
    0x00001d2c   0x00001d2c   0x00000140   Code   RO          314    i.xTaskIncrementTick  tasks.o
    0x00001e6c   0x00001e6c   0x00000090   Code   RO          317    i.xTaskPriorityDisinherit  tasks.o
    0x00001efc   0x00001efc   0x000000a0   Code   RO          318    i.xTaskRemoveFromEventList  tasks.o
    0x00001f9c   0x00001f9c   0x00000114   Code   RO          320    i.xTaskResumeAll    tasks.o
    0x000020b0   0x000020b0   0x00000020   Data   RO          836    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x40000000, Load base: 0x000020d0, Size: 0x00003b98, Max: 0x00008000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x40000000   0x000020d0   0x00000008   Data   RW            7    .data               lcd.o
    0x40000008   0x000020d8   0x0000003c   Data   RW          323    .data               tasks.o
    0x40000044   0x00002114   0x00000018   Data   RW          572    .data               heap_4.o
    0x4000005c   0x0000212c   0x00000004   Data   RW          619    .data               port.o
    0x40000060        -       0x000000b4   Zero   RW          322    .bss                tasks.o
    0x40000114        -       0x00003400   Zero   RW          571    .bss                heap_4.o
    0x40003514        -       0x00000060   Zero   RW          706    .bss                c_t.l(libspace.o)
    0x40003574   0x00002130   0x00000004   PAD
    0x40003578        -       0x00000000   Zero   RW          662    HEAP                startup.o
    0x40003578        -       0x00000620   Zero   RW          661    STACK               startup.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       676         28          0         24      13312       3971   heap_4.o
      1048        224          0          8          0      20557   lcd.o
       260          0          0          0          0       4490   list.o
       396         40          0          4          0       4139   port.o
       396         24          0          0          0        404   portasm.o
      1796          0          0          0          0      11587   queue.o
       292         60          0          0       1568        808   startup.o
      2764        160          0         60        180      17681   tasks.o

    ----------------------------------------------------------------------
      7628        536         32         96      15060      63637   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         0          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        44          4          0          0          0          0   __rtentry2.o
         8          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        40          0          0          0          0          0   __scatter_copy.o
        44          0          0          0          0          0   __scatter_zi.o
        20          0          0          0          0         80   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
        10          0          0          0          0          0   libinit.o
        12          0          0          0          0          0   libinit2.o
        12          0          0          0          0          0   libshutdown.o
         6          0          0          0          0          0   libshutdown2.o
        12          4          0          0         96         68   libspace.o
       212          0          0          0          0         68   rt_memcpy.o
       100          0          0          0          0         80   rt_memcpy_w.o
         8          0          0          0          0          0   rtexit.o
        12          0          0          0          0          0   rtexit2.o
        20          4          0          0          0         60   sys_exit.o
        96          0          0          0          0         80   sys_stackheap_outer.o
         4          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       740         20          0          0        100        708   Library Totals
         6          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       734         20          0          0         96        708   c_t.l

    ----------------------------------------------------------------------
       740         20          0          0        100        708   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      8368        556         32         96      15160      61445   Grand Totals
      8368        556         32         96      15160      61445   ELF Image Totals
      8368        556         32         96          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 8400 (   8.20kB)
    Total RW  Size (RW Data + ZI Data)             15256 (  14.90kB)
    Total ROM Size (Code + RO Data + RW Data)       8496 (   8.30kB)

==============================================================================

